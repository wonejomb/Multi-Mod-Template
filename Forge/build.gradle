plugins {
    id 'net.minecraftforge.gradle' version '6.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

java {
    withSourcesJar ()
    withJavadocJar()

    toolchain {
        languageVersion=JavaLanguageVersion.of(21)
        vendor=JvmVendorSpec.MICROSOFT
    }
    targetCompatibility=JavaVersion.VERSION_21
    sourceCompatibility=JavaVersion.VERSION_21
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }

    if (System.getProperty("idea.sync") != "true") {
        annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    }

    compileOnly project(":Common")
}

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${parchment_mc_version}"
    copyIdeResources=true
    reobf=true

    runs {
        client {
            workingDirectory project.file("run/client").canonicalPath
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file("run/server").canonicalPath
            arg '--nogui'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file("run/data").canonicalPath
            args '--mod', project.mod_id, '-all', '--output', file("src/generated/resources/").canonicalPath, '--existing', file('src/main/resources/').canonicalPath
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDirs += project(":Common").sourceSets.main.resources
    srcDir 'src/generated/resources'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}