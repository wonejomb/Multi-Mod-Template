plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT' apply false
    id 'net.neoforged.gradle.vanilla' version '7.0.143' apply false
    id 'java-library'

    id 'net.neoforged.gradle.userdev' version '7.0.143'
}

group="your.mod.group"
version="${mod_version}"
base.archivesName="[${mc_version}]${mod_name}-${mod_version}-neoforge"

java {
    withSourcesJar ()
    withJavadocJar()

    toolchain {
        languageVersion=JavaLanguageVersion.of(21)
        vendor=JvmVendorSpec.MICROSOFT
    }
    targetCompatibility=JavaVersion.VERSION_21
    sourceCompatibility=JavaVersion.VERSION_21
}

Spec<Task> notNeoTask = { Task it -> !it.name.startsWithIgnoreCase("neo") } as Spec<Task>

tasks.withType(JavaCompile).matching {notNeoTask}.configureEach {
    source project(":Common").sourceSets.main.allSource
}

sourceSets {
    main {
        resources.srcDirs += project(":Common").sourceSets.main.resources.srcDirs
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    compileOnly project(":Common")
}

runs {
    configureEach {
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'neoforge.enableGameTestNamespaces', mod_id
    }
    server {
        systemProperty 'neoforge.enableGameTestNamespaces', mod_id
        programArgument '--nogui'
    }
    data {
        systemProperty 'neoforge.enableGameTestNamespaces', mod_id
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').canonicalPath, '--existing', file('src/main/resources/').canonicalPath
    }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}